# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app

.pio
.vscode/.browse.c_cpp.db*
.vscode/c_cpp_properties.json
.vscode/launch.json
.vscode/ipch

metadata/opcodes.def

.vs/
x64/
Debug/

proj/vm.fs

node_modules/
.bin/

log*
!Log.cs
obj/
*.vcxproj

*.filters
out/


CMakeLists.txt.user
CMakeCache.txt
CMakeFiles
CMakeScripts
Testing
Makefile
cmake_install.cmake
install_manifest.txt
compile_commands.json
CTestTestfile.cmake
_deps
insmvm.sln
/ZERO_CHECK.vcxproj
/ZERO_CHECK.vcxproj.filters
/ALL_BUILD.vcxproj
/ALL_BUILD.vcxproj.filters

wave.std/bin/

bin/

*.*~

.idea/

# Generated by Cargo
# will have compiled files and executables
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

launch.json

mana_lang.sln.DotSettings.user

*.user

.antlr/
